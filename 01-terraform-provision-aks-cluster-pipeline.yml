trigger:
 - none

pool:
  local-pool

# Stage-1: Terraform Validate Stage
## Step-1: Publish Artifacts to Pipeline (Pipeline artifacts provide a way to share files between stages in a pipeline or between different pipelines. )
## Step-2: Install Latest Terraform (0.13.5) (Ideally not needed if we use default Ubuntu Agents)
## Step-3: Validate Terraform Manifests (terraform init, terraform validate)

stages:
- stage: TerraformValidate
  jobs:
    - job: TerraformValidateJob
      continueOnError: false
      steps:
       - task: PublishPipelineArtifact@1
         inputs:
            targetPath: '$(System.DefaultWorkingDirectory)/terraform-manifests'
            artifact: 'terraform-menifests-out'
            publishLocation: 'pipeline'
       - task: Bash@3
         inputs:
            targetType: 'inline'
            script: sh ./Scripts/terraformsetup.sh
         env:
            MYSECRET: $(Foo)
         

       - task: Bash@3
         inputs:
          targetType: 'inline'
          script: |
            ./terraformsetup.sh
          failOnStderr: true
          workingDirectory: "$(System.DefaultWorkingDirectory)/Scripts/"

       - task: AzureCLI@2
         displayName: SetUp AKS
         name: PlanSetup
         inputs:
          azureSubscription: 'Azure subscription 1(576f8ce4-7fe6-4346-9caa-29247ef66ff4)'
          scriptType: 'bash'
          scriptLocation: 'scriptPath'
          scriptPath: '$(System.DefaultWorkingDirectory)/Scripts/terraformsetup.sh'
          arguments: 'environment=dev'
       